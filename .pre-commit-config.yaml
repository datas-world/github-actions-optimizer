repos:
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        files: ^gh-actions-optimizer$

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        files: ^gh-actions-optimizer$

  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        additional_dependencies: [flake8-docstrings]
        args: [--max-line-length=100, --extend-ignore=W503]
        files: ^gh-actions-optimizer$

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        args: [--strict]
        files: ^gh-actions-optimizer$
        additional_dependencies: [types-PyYAML]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [--skip, "B603,B607"]
        files: ^gh-actions-optimizer$

  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        files: ^gh-actions-optimizer$

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
        exclude: \.vscode/settings\.json$ # Exclude VS Code settings (JSONC format)
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
      - id: pretty-format-json
        args: [--autofix, --indent=4]
        exclude: \.jsonc$|\.vscode/settings\.json$ # Exclude JSONC files and VS Code settings
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: detect-private-key
        exclude: tests/

  - repo: https://github.com/google/yamlfmt
    rev: v0.17.2
    hooks:
      - id: yamlfmt
        args: [--formatter, retain_line_breaks=true]

  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: pytest
        language: system
        types: [python]
        pass_filenames: false
        always_run: true
        args: [tests/, -v, --tb=short, --strict-markers, --strict-config]

      - id: validate-extension
        name: validate-github-cli-extension
        entry: python
        language: system
        args: [gh-actions-optimizer, --help]
        pass_filenames: false
        always_run: true
        files: ^gh-actions-optimizer$

      - id: check-dependencies
        name: check-github-cli-dependencies
        entry: bash
        language: system
        args: [-c, 'command -v gh >/dev/null || (echo "Error: gh CLI not found" && exit 1); command -v jq >/dev/null || (echo "Error: jq not found" && exit 1)']
        pass_filenames: false
        always_run: true
